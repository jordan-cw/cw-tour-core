{"version":3,"file":"ngx-tour-core.umd.js.map","sources":["ng://ngx-tour-core/lib/tour.service.ts","ng://ngx-tour-core/lib/tour-hotkey-listener.component.ts","ng://ngx-tour-core/lib/tour.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { NavigationStart, Router, UrlSegment } from '@angular/router';\r\n\r\nimport { TourAnchorDirective } from './tour-anchor.directive';\r\nimport { Subject, Observable, merge as mergeStatic } from 'rxjs';\r\nimport { first, map, filter } from 'rxjs/operators';\r\n\r\nexport interface IStepOption {\r\n  stepId?: string;\r\n  anchorId?: string;\r\n  title?: string;\r\n  content?: string;\r\n  route?: string | UrlSegment[];\r\n  nextStep?: number | string;\r\n  prevStep?: number | string;\r\n  placement?: any;\r\n  preventScrolling?: boolean;\r\n  prevBtnTitle?: string;\r\n  nextBtnTitle?: string;\r\n  endBtnTitle?: string;\r\n}\r\n\r\nexport enum TourState {\r\n  OFF,\r\n  ON,\r\n  PAUSED\r\n}\r\n\r\nexport enum TourDirection {\r\n  None = 0,\r\n  Next = 1,\r\n  Previous = 2\r\n}\r\n\r\n@Injectable()\r\nexport class TourService<T extends IStepOption = IStepOption> {\r\n  public stepShow$: Subject<T> = new Subject();\r\n  public stepHide$: Subject<T> = new Subject();\r\n  public initialize$: Subject<T[]> = new Subject();\r\n  public start$: Subject<T> = new Subject();\r\n  public end$: Subject<any> = new Subject();\r\n  public pause$: Subject<T> = new Subject();\r\n  public resume$: Subject<T> = new Subject();\r\n  public anchorRegister$: Subject<string> = new Subject();\r\n  public anchorUnregister$: Subject<string> = new Subject();\r\n  public events$: Observable<{ name: string; value: any }> = mergeStatic(\r\n    this.stepShow$.pipe(map(value => ({ name: 'stepShow', value }))),\r\n    this.stepHide$.pipe(map(value => ({ name: 'stepHide', value }))),\r\n    this.initialize$.pipe(map(value => ({ name: 'initialize', value }))),\r\n    this.start$.pipe(map(value => ({ name: 'start', value }))),\r\n    this.end$.pipe(map(value => ({ name: 'end', value }))),\r\n    this.pause$.pipe(map(value => ({ name: 'pause', value }))),\r\n    this.resume$.pipe(map(value => ({ name: 'resume', value }))),\r\n    this.anchorRegister$.pipe(\r\n      map(value => ({\r\n        name: 'anchorRegister',\r\n        value\r\n      }))\r\n    ),\r\n    this.anchorUnregister$.pipe(\r\n      map(value => ({\r\n        name: 'anchorUnregister',\r\n        value\r\n      }))\r\n    )\r\n  );\r\n\r\n  public steps: T[] = [];\r\n  public currentStep: T;\r\n\r\n  public anchors: { [anchorId: string]: TourAnchorDirective } = {};\r\n  private status: TourState = TourState.OFF;\r\n  private isHotKeysEnabled = true;\r\n  private direction: TourDirection = TourDirection.Next;\r\n\r\n  constructor(\r\n    private router: Router,\r\n  ) { }\r\n\r\n  public initialize(steps: T[], stepDefaults?: T): void {\r\n    if (steps && steps.length > 0) {\r\n      this.status = TourState.OFF;\r\n      this.steps = steps.map(step => Object.assign({}, stepDefaults, step));\r\n      this.initialize$.next(this.steps);\r\n    }\r\n  }\r\n\r\n  public disableHotkeys(): void {\r\n    this.isHotKeysEnabled = false;\r\n  }\r\n\r\n  public enableHotkeys(): void {\r\n    this.isHotKeysEnabled = true;\r\n  }\r\n\r\n  public start(): void {\r\n    this.startAt(0);\r\n  }\r\n\r\n  public startAt(stepId: number | string): void {\r\n    this.status = TourState.ON;\r\n    this.goToStep(this.loadStep(stepId));\r\n    this.start$.next();\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationStart), first())\r\n      .subscribe(() => {\r\n        if (this.currentStep && this.currentStep.hasOwnProperty('route')) {\r\n          this.hideStep(this.currentStep);\r\n        }\r\n      });\r\n  }\r\n\r\n  public end(): void {\r\n    this.status = TourState.OFF;\r\n    this.hideStep(this.currentStep);\r\n    this.currentStep = undefined;\r\n    this.end$.next();\r\n    this.direction = TourDirection.Next;\r\n  }\r\n\r\n  public pause(): void {\r\n    this.status = TourState.PAUSED;\r\n    this.hideStep(this.currentStep);\r\n    this.pause$.next();\r\n  }\r\n\r\n  public resume(): void {\r\n    this.status = TourState.ON;\r\n    this.showStep(this.currentStep);\r\n    this.resume$.next();\r\n  }\r\n\r\n  public toggle(pause?: boolean): void {\r\n    if (pause) {\r\n      if (this.currentStep) {\r\n        this.pause();\r\n      } else {\r\n        this.resume();\r\n      }\r\n    } else {\r\n      if (this.currentStep) {\r\n        this.end();\r\n      } else {\r\n        this.start();\r\n      }\r\n    }\r\n  }\r\n\r\n  public next(): void {\r\n    this.direction = TourDirection.Next;\r\n    if (this.hasNext(this.currentStep)) {\r\n      this.goToStep(\r\n        this.loadStep(\r\n          this.currentStep.nextStep || this.steps.indexOf(this.currentStep) + 1\r\n        )\r\n      );\r\n    } else {\r\n      this.end();\r\n      return;\r\n    }\r\n  }\r\n\r\n  public hasNext(step: T): boolean {\r\n    if (!step) {\r\n      // console.warn('Can\\'t get next step. No currentStep.');\r\n      return false;\r\n    }\r\n    return (\r\n      step.nextStep !== undefined ||\r\n      this.steps.indexOf(step) < this.steps.length - 1\r\n    );\r\n  }\r\n\r\n  public prev(): void {\r\n    this.direction = TourDirection.Previous;\r\n    if (this.hasPrev(this.currentStep)) {\r\n      this.goToStep(\r\n        this.loadStep(\r\n          this.currentStep.prevStep || this.steps.indexOf(this.currentStep) - 1\r\n        )\r\n      );\r\n    } else {\r\n      this.end();\r\n      return;\r\n    }\r\n  }\r\n\r\n  public hasPrev(step: T): boolean {\r\n    if (!step) {\r\n      // console.warn('Can\\'t get previous step. No currentStep.');\r\n      return false;\r\n    }\r\n    return step.prevStep !== undefined || this.steps.indexOf(step) > 0;\r\n  }\r\n\r\n  public goto(stepId: number | string): void {\r\n    this.goToStep(this.loadStep(stepId));\r\n  }\r\n\r\n  public register(anchorId: string, anchor: TourAnchorDirective): void {\r\n    if (!anchorId)\r\n      return;\r\n    if (this.anchors[anchorId]) {\r\n      throw new Error('anchorId ' + anchorId + ' already registered!');\r\n    }\r\n    this.anchors[anchorId] = anchor;\r\n    this.anchorRegister$.next(anchorId);\r\n  }\r\n\r\n  public unregister(anchorId: string): void {\r\n    if (!anchorId)\r\n      return;\r\n    delete this.anchors[anchorId];\r\n    this.anchorUnregister$.next(anchorId);\r\n  }\r\n\r\n  public getStatus(): TourState {\r\n    return this.status;\r\n  }\r\n\r\n  public isHotkeysEnabled(): boolean {\r\n    return this.isHotKeysEnabled;\r\n  }\r\n\r\n  private goToStep(step: T): void {\r\n    if (!step) {\r\n      // console.warn('Can\\'t go to non-existent step');\r\n      this.end();\r\n      return;\r\n    }\r\n    let navigatePromise: Promise<boolean> = new Promise(resolve =>\r\n      resolve(true)\r\n    );\r\n    if (step.route !== undefined && typeof step.route === 'string') {\r\n      navigatePromise = this.router.navigateByUrl(step.route);\r\n    } else if (step.route && Array.isArray(step.route)) {\r\n      navigatePromise = this.router.navigate(step.route);\r\n    }\r\n    navigatePromise.then(navigated => {\r\n      if (navigated !== false) {\r\n        setTimeout(() => this.setCurrentStep(step));\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadStep(stepId: number | string): T {\r\n    if (typeof stepId === 'number') {\r\n      return this.steps[stepId];\r\n    } else {\r\n      return this.steps.find(step => step.stepId === stepId);\r\n    }\r\n  }\r\n\r\n  private setCurrentStep(step: T): void {\r\n    if (this.currentStep) {\r\n      this.hideStep(this.currentStep);\r\n    }\r\n    this.currentStep = step;\r\n    this.showStep(this.currentStep);\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationStart), first())\r\n      .subscribe((event) => {\r\n        if (this.currentStep && this.currentStep.hasOwnProperty('route')) {\r\n          this.hideStep(this.currentStep);\r\n        }\r\n      });\r\n  }\r\n\r\n  private showStep(step: T): void {\r\n    const anchor = this.anchors[step && step.anchorId];\r\n    if (!anchor) {\r\n      let stepIndex = this.steps.indexOf(step);\r\n      this.skipStep();\r\n    } else {\r\n      anchor.showTourStep(step);\r\n      this.stepShow$.next(step);\r\n    }\r\n  }\r\n\r\n  protected hideStep(step: T): void {\r\n    const anchor = this.anchors[step && step.anchorId];\r\n    if (!anchor) {\r\n      return;\r\n    }\r\n    anchor.hideTourStep();\r\n    this.stepHide$.next(step);\r\n  }\r\n\r\n  private skipStep() {\r\n    switch (this.direction) {\r\n      case TourDirection.Next: {\r\n        this.next();\r\n        break;\r\n      }\r\n      case TourDirection.Previous: {\r\n        this.prev();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, HostListener } from '@angular/core';\r\n\r\nimport { TourService, TourState } from './tour.service';\r\n\r\n@Component({\r\n  selector: 'tour-hotkey-listener',\r\n  template: `<ng-content></ng-content>`\r\n})\r\nexport class TourHotkeyListenerComponent {\r\n  constructor(public tourService: TourService) {}\r\n\r\n  /**\r\n   * Configures hot keys for controlling the tour with the keyboard\r\n   */\r\n  @HostListener('window:keydown.Escape')\r\n  public onEscapeKey(): void {\r\n    if (\r\n      this.tourService.getStatus() === TourState.ON &&\r\n      this.tourService.isHotkeysEnabled()\r\n    ) {\r\n      this.tourService.end();\r\n    }\r\n  }\r\n\r\n  @HostListener('window:keydown.ArrowRight')\r\n  public onArrowRightKey(): void {\r\n    if (\r\n      this.tourService.getStatus() === TourState.ON &&\r\n      this.tourService.hasNext(this.tourService.currentStep) &&\r\n      this.tourService.isHotkeysEnabled()\r\n    ) {\r\n      this.tourService.next();\r\n    }\r\n  }\r\n\r\n  @HostListener('window:keydown.ArrowLeft')\r\n  public onArrowLeftKey(): void {\r\n    if (\r\n      this.tourService.getStatus() === TourState.ON &&\r\n      this.tourService.hasPrev(this.tourService.currentStep) &&\r\n      this.tourService.isHotkeysEnabled()\r\n    ) {\r\n      this.tourService.prev();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { TourHotkeyListenerComponent } from './tour-hotkey-listener.component';\r\nimport { TourService } from './tour.service';\r\n\r\n@NgModule({\r\n    declarations: [TourHotkeyListenerComponent],\r\n    exports: [TourHotkeyListenerComponent],\r\n    imports: [CommonModule, RouterModule],\r\n})\r\nexport class TourModule {\r\n    public static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: TourModule,\r\n            providers: [\r\n                TourService,\r\n            ],\r\n        };\r\n    }\r\n};\r\n\r\nexport { TourService };\r\n"],"names":["router","Subject","mergeStatic","map","filter","NavigationStart","first","Injectable","Router","Component","HostListener","NgModule","CommonModule","RouterModule"],"mappings":"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"}
