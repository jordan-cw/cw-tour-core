{"version":3,"file":"ngx-tour-core.js.map","sources":["ng://ngx-tour-core/lib/tour.service.ts","ng://ngx-tour-core/lib/tour-hotkey-listener.component.ts","ng://ngx-tour-core/lib/tour.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { NavigationStart, Router, UrlSegment } from '@angular/router';\r\n\r\nimport { TourAnchorDirective } from './tour-anchor.directive';\r\nimport { Subject, Observable, merge as mergeStatic } from 'rxjs';\r\nimport { first, map, filter } from 'rxjs/operators';\r\n\r\nexport interface IStepOption {\r\n  stepId?: string;\r\n  anchorId?: string;\r\n  title?: string;\r\n  content?: string;\r\n  route?: string | UrlSegment[];\r\n  nextStep?: number | string;\r\n  prevStep?: number | string;\r\n  placement?: any;\r\n  preventScrolling?: boolean;\r\n  prevBtnTitle?: string;\r\n  nextBtnTitle?: string;\r\n  endBtnTitle?: string;\r\n}\r\n\r\nexport enum TourState {\r\n  OFF,\r\n  ON,\r\n  PAUSED\r\n}\r\n\r\nexport enum TourDirection {\r\n  None = 0,\r\n  Next = 1,\r\n  Previous = 2\r\n}\r\n\r\n@Injectable()\r\nexport class TourService<T extends IStepOption = IStepOption> {\r\n  public stepShow$: Subject<T> = new Subject();\r\n  public stepHide$: Subject<T> = new Subject();\r\n  public initialize$: Subject<T[]> = new Subject();\r\n  public start$: Subject<T> = new Subject();\r\n  public end$: Subject<any> = new Subject();\r\n  public pause$: Subject<T> = new Subject();\r\n  public resume$: Subject<T> = new Subject();\r\n  public anchorRegister$: Subject<string> = new Subject();\r\n  public anchorUnregister$: Subject<string> = new Subject();\r\n  public events$: Observable<{ name: string; value: any }> = mergeStatic(\r\n    this.stepShow$.pipe(map(value => ({ name: 'stepShow', value }))),\r\n    this.stepHide$.pipe(map(value => ({ name: 'stepHide', value }))),\r\n    this.initialize$.pipe(map(value => ({ name: 'initialize', value }))),\r\n    this.start$.pipe(map(value => ({ name: 'start', value }))),\r\n    this.end$.pipe(map(value => ({ name: 'end', value }))),\r\n    this.pause$.pipe(map(value => ({ name: 'pause', value }))),\r\n    this.resume$.pipe(map(value => ({ name: 'resume', value }))),\r\n    this.anchorRegister$.pipe(\r\n      map(value => ({\r\n        name: 'anchorRegister',\r\n        value\r\n      }))\r\n    ),\r\n    this.anchorUnregister$.pipe(\r\n      map(value => ({\r\n        name: 'anchorUnregister',\r\n        value\r\n      }))\r\n    )\r\n  );\r\n\r\n  public steps: T[] = [];\r\n  public currentStep: T;\r\n\r\n  public anchors: { [anchorId: string]: TourAnchorDirective } = {};\r\n  private status: TourState = TourState.OFF;\r\n  private isHotKeysEnabled = true;\r\n  private direction: TourDirection = TourDirection.Next;\r\n\r\n  constructor(\r\n    private router: Router,\r\n  ) { }\r\n\r\n  public initialize(steps: T[], stepDefaults?: T): void {\r\n    if (steps && steps.length > 0) {\r\n      this.status = TourState.OFF;\r\n      this.steps = steps.map(step => Object.assign({}, stepDefaults, step));\r\n      this.initialize$.next(this.steps);\r\n    }\r\n  }\r\n\r\n  public disableHotkeys(): void {\r\n    this.isHotKeysEnabled = false;\r\n  }\r\n\r\n  public enableHotkeys(): void {\r\n    this.isHotKeysEnabled = true;\r\n  }\r\n\r\n  public start(): void {\r\n    this.startAt(0);\r\n  }\r\n\r\n  public startAt(stepId: number | string): void {\r\n    this.status = TourState.ON;\r\n    this.goToStep(this.loadStep(stepId));\r\n    this.start$.next();\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationStart), first())\r\n      .subscribe(() => {\r\n        if (this.currentStep && this.currentStep.hasOwnProperty('route')) {\r\n          this.hideStep(this.currentStep);\r\n        }\r\n      });\r\n  }\r\n\r\n  public end(): void {\r\n    this.status = TourState.OFF;\r\n    this.hideStep(this.currentStep);\r\n    this.currentStep = undefined;\r\n    this.end$.next();\r\n    this.direction = TourDirection.Next;\r\n  }\r\n\r\n  public pause(): void {\r\n    this.status = TourState.PAUSED;\r\n    this.hideStep(this.currentStep);\r\n    this.pause$.next();\r\n  }\r\n\r\n  public resume(): void {\r\n    this.status = TourState.ON;\r\n    this.showStep(this.currentStep);\r\n    this.resume$.next();\r\n  }\r\n\r\n  public toggle(pause?: boolean): void {\r\n    if (pause) {\r\n      if (this.currentStep) {\r\n        this.pause();\r\n      } else {\r\n        this.resume();\r\n      }\r\n    } else {\r\n      if (this.currentStep) {\r\n        this.end();\r\n      } else {\r\n        this.start();\r\n      }\r\n    }\r\n  }\r\n\r\n  public next(): void {\r\n    this.direction = TourDirection.Next;\r\n    if (this.hasNext(this.currentStep)) {\r\n      this.goToStep(\r\n        this.loadStep(\r\n          this.currentStep.nextStep || this.steps.indexOf(this.currentStep) + 1\r\n        )\r\n      );\r\n    } else {\r\n      this.end();\r\n      return;\r\n    }\r\n  }\r\n\r\n  public hasNext(step: T): boolean {\r\n    if (!step) {\r\n      console.warn('Can\\'t get next step. No currentStep.');\r\n      return false;\r\n    }\r\n    return (\r\n      step.nextStep !== undefined ||\r\n      this.steps.indexOf(step) < this.steps.length - 1\r\n    );\r\n  }\r\n\r\n  public prev(): void {\r\n    this.direction = TourDirection.Previous;\r\n    if (this.hasPrev(this.currentStep)) {\r\n      this.goToStep(\r\n        this.loadStep(\r\n          this.currentStep.prevStep || this.steps.indexOf(this.currentStep) - 1\r\n        )\r\n      );\r\n    } else {\r\n      this.end();\r\n      return;\r\n    }\r\n  }\r\n\r\n  public hasPrev(step: T): boolean {\r\n    if (!step) {\r\n      console.warn('Can\\'t get previous step. No currentStep.');\r\n      return false;\r\n    }\r\n    return step.prevStep !== undefined || this.steps.indexOf(step) > 0;\r\n  }\r\n\r\n  public goto(stepId: number | string): void {\r\n    this.goToStep(this.loadStep(stepId));\r\n  }\r\n\r\n  public register(anchorId: string, anchor: TourAnchorDirective): void {\r\n    if (!anchorId)\r\n      return;\r\n    if (this.anchors[anchorId]) {\r\n      throw new Error('anchorId ' + anchorId + ' already registered!');\r\n    }\r\n    this.anchors[anchorId] = anchor;\r\n    this.anchorRegister$.next(anchorId);\r\n  }\r\n\r\n  public unregister(anchorId: string): void {\r\n    if (!anchorId)\r\n      return;\r\n    delete this.anchors[anchorId];\r\n    this.anchorUnregister$.next(anchorId);\r\n  }\r\n\r\n  public getStatus(): TourState {\r\n    return this.status;\r\n  }\r\n\r\n  public isHotkeysEnabled(): boolean {\r\n    return this.isHotKeysEnabled;\r\n  }\r\n\r\n  private goToStep(step: T): void {\r\n    if (!step) {\r\n      console.warn('Can\\'t go to non-existent step');\r\n      this.end();\r\n      return;\r\n    }\r\n    let navigatePromise: Promise<boolean> = new Promise(resolve =>\r\n      resolve(true)\r\n    );\r\n    if (step.route !== undefined && typeof step.route === 'string') {\r\n      navigatePromise = this.router.navigateByUrl(step.route);\r\n    } else if (step.route && Array.isArray(step.route)) {\r\n      navigatePromise = this.router.navigate(step.route);\r\n    }\r\n    navigatePromise.then(navigated => {\r\n      if (navigated !== false) {\r\n        setTimeout(() => this.setCurrentStep(step));\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadStep(stepId: number | string): T {\r\n    if (typeof stepId === 'number') {\r\n      return this.steps[stepId];\r\n    } else {\r\n      return this.steps.find(step => step.stepId === stepId);\r\n    }\r\n  }\r\n\r\n  private setCurrentStep(step: T): void {\r\n    if (this.currentStep) {\r\n      this.hideStep(this.currentStep);\r\n    }\r\n    this.currentStep = step;\r\n    this.showStep(this.currentStep);\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationStart), first())\r\n      .subscribe((event) => {\r\n        if (this.currentStep && this.currentStep.hasOwnProperty('route')) {\r\n          this.hideStep(this.currentStep);\r\n        }\r\n      });\r\n  }\r\n\r\n  private showStep(step: T): void {\r\n    const anchor = this.anchors[step && step.anchorId];\r\n    if (!anchor) {\r\n      let stepIndex = this.steps.indexOf(step);\r\n      this.skipStep();\r\n    } else {\r\n      anchor.showTourStep(step);\r\n      this.stepShow$.next(step);\r\n    }\r\n  }\r\n\r\n  protected hideStep(step: T): void {\r\n    const anchor = this.anchors[step && step.anchorId];\r\n    if (!anchor) {\r\n      return;\r\n    }\r\n    anchor.hideTourStep();\r\n    this.stepHide$.next(step);\r\n  }\r\n\r\n  private skipStep() {\r\n    switch (this.direction) {\r\n      case TourDirection.Next: {\r\n        this.next();\r\n        break;\r\n      }\r\n      case TourDirection.Previous: {\r\n        this.prev();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, HostListener } from '@angular/core';\r\n\r\nimport { TourService, TourState } from './tour.service';\r\n\r\n@Component({\r\n  selector: 'tour-hotkey-listener',\r\n  template: `<ng-content></ng-content>`\r\n})\r\nexport class TourHotkeyListenerComponent {\r\n  constructor(public tourService: TourService) {}\r\n\r\n  /**\r\n   * Configures hot keys for controlling the tour with the keyboard\r\n   */\r\n  @HostListener('window:keydown.Escape')\r\n  public onEscapeKey(): void {\r\n    if (\r\n      this.tourService.getStatus() === TourState.ON &&\r\n      this.tourService.isHotkeysEnabled()\r\n    ) {\r\n      this.tourService.end();\r\n    }\r\n  }\r\n\r\n  @HostListener('window:keydown.ArrowRight')\r\n  public onArrowRightKey(): void {\r\n    if (\r\n      this.tourService.getStatus() === TourState.ON &&\r\n      this.tourService.hasNext(this.tourService.currentStep) &&\r\n      this.tourService.isHotkeysEnabled()\r\n    ) {\r\n      this.tourService.next();\r\n    }\r\n  }\r\n\r\n  @HostListener('window:keydown.ArrowLeft')\r\n  public onArrowLeftKey(): void {\r\n    if (\r\n      this.tourService.getStatus() === TourState.ON &&\r\n      this.tourService.hasPrev(this.tourService.currentStep) &&\r\n      this.tourService.isHotkeysEnabled()\r\n    ) {\r\n      this.tourService.prev();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { TourHotkeyListenerComponent } from './tour-hotkey-listener.component';\r\nimport { TourService } from './tour.service';\r\n\r\n@NgModule({\r\n    declarations: [TourHotkeyListenerComponent],\r\n    exports: [TourHotkeyListenerComponent],\r\n    imports: [CommonModule, RouterModule],\r\n})\r\nexport class TourModule {\r\n    public static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: TourModule,\r\n            providers: [\r\n                TourService,\r\n            ],\r\n        };\r\n    }\r\n};\r\n\r\nexport { TourService };\r\n"],"names":["mergeStatic"],"mappings":"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"}
